plugins {
    id 'net.ltgt.errorprone' version '2.0.2'
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

ext {
    sentryVersion = '6.0.0'
    micrometerVersion = '1.9.0'
    kafkaVersion = '3.1.0'
    logbackVersion = '1.2.11'
    mockitoVersion = '4.6.1'
}

dependencies{
    annotationProcessor 'org.springframework.boot:spring-boot-autoconfigure-processor'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    implementation 'org.springframework.boot:spring-boot'
    implementation 'org.springframework.boot:spring-boot-autoconfigure'

    implementation "io.sentry:sentry-logback:${sentryVersion}"
    implementation "io.micrometer:micrometer-core:${micrometerVersion}"
    implementation "io.micrometer:micrometer-registry-jmx:${micrometerVersion}"
    implementation "io.burt:jmespath-core:0.5.1"
    implementation "io.burt:jmespath-jackson:0.5.1"
    implementation "io.vavr:vavr:1.0.0-alpha-4"
    implementation "com.deviceinsight.kafka:kafka-health-check:1.3.0"
    implementation "org.springframework.kafka:spring-kafka"
    implementation "org.springframework.boot:spring-boot-starter"
    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation "org.apache.httpcomponents:httpclient:4.5.13"
    implementation "org.apache.kafka:kafka-streams:${kafkaVersion}"
    implementation "org.apache.kafka:kafka-clients:${kafkaVersion}"
    implementation "net.logstash.logback:logstash-logback-encoder:7.2"
    implementation "ch.qos.logback:logback-core:${logbackVersion}"
    implementation "org.slf4j:slf4j-api"

    implementation "com.fasterxml.jackson.core:jackson-annotations"
    implementation "com.fasterxml.jackson.core:jackson-core"
    implementation ("com.fasterxml.jackson.module:jackson-module-scala_3")
    implementation ("com.fasterxml.jackson.datatype:jackson-datatype-jsr310")
    implementation ("com.fasterxml.jackson.datatype:jackson-datatype-jdk8")
    implementation "com.fasterxml.jackson.core:jackson-databind"

    implementation("ch.qos.logback:logback-classic:${logbackVersion}") {
        exclude group: "org.sl4j", module: "slf4j-api"
    }
    implementation("com.github.spotbugs:spotbugs-annotations:4.7.0")
    implementation "org.apache.kafka:kafka-clients:${kafkaVersion}:test"
    implementation "org.apache.kafka:kafka_2.13:${kafkaVersion}"
    implementation "org.apache.kafka:kafka_2.13:${kafkaVersion}:test"
    implementation "org.skyscreamer:jsonassert:1.5.0"
    implementation "org.springframework.kafka:spring-kafka-test"
    implementation "org.apache.kafka:kafka-streams-test-utils:${kafkaVersion}"
    implementation("org.springframework.boot:spring-boot-starter-test") {
        exclude group: "org.junit.vintage", module: "junit-vintage-engine"
        exclude group: "junit", module: "junit"
    }
    implementation "org.mock-server:mockserver-netty:5.13.2"
    implementation ("org.bouncycastle:bcprov-jdk15on:1.70") {
        because "due to ClassNotFoundException after bump mockserver-netty-5.12.0"
    }
    implementation ("org.bouncycastle:bcpkix-jdk15on:1.70") {
        because "due to ClassNotFoundException after bump mockserver-netty-5.12.0"
    }
    implementation "com.google.guava:guava:31.1-jre"
    implementation "org.testcontainers:testcontainers:1.17.1"
    implementation "org.assertj:assertj-core:3.22.0"
    implementation "org.mockito:mockito-core:${mockitoVersion}"
    implementation "org.mockito:mockito-junit-jupiter:${mockitoVersion}"
    implementation("net.bytebuddy:byte-buddy:1.12.10") {
        because "due to https://github.com/mockito/mockito/releases/tag/v4.5.1"
    }

    developmentOnly "org.springframework.boot:spring-boot-devtools"
    errorprone "com.google.errorprone:error_prone_core:2.14.0"
}

publishing {
    publications {
        starter(MavenPublication) {
            groupId = "${groupId}"
            artifactId = 'kahpp-spring-autoconfigure'
            version = "${version}"
            from components.java
            pom {
                name = artifactId
                description = "Spring Boot auto-configuration for Kahpp"
                url = "https://github.com/GetFeedback/kahpp-oss"
                licenses {
                    license {
                        name = 'The MIT License'
                        url = 'https://github.com/GetFeedback/kahpp-oss/blob/main/LICENSE'
                        distribution = 'repo'
                    }
                }
            }
        }
    }
}

test {
    systemProperty("kahpp-test.instance", "default")
    systemProperty("kahpp-test.build-dir", "src/test/resources/functional/default")
}
